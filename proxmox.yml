---
- name: Automate Proxmox Instance
  hosts: proxmox_host
  gather_facts: no
  become: yes

  vars:
    proxmox_url: "https://proxmox.dedsechacks.com/api2/json"
    proxmox_username: "root@pam"
    proxmox_password: “dedsec”
    proxmox_node_name: "proxmox"
    vm_ids:
      - 100
      - 101
      - 102
    template_id: "local:vztmpl/fedora-40_standard_40.0-1_amd64.tar.zst"
    disk_size_gb: 30
    memory_mb: 4048
    cpu_cores: 12
    ostype: "l2tpv3"

  tasks:
    - name: Ensure Proxmox is reachable
      uri:
        url: "{{ proxmox_url }}/nodes"
        method: GET
        user: "{{ proxmox_username }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
        return_content: yes
      register: proxmox_response

    - name: Fail if Proxmox is not reachable
      fail:
        msg: "Proxmox API not reachable"
      when: proxmox_response.status != 200

    - name: Create VMs in a loop
      uri:
        url: "{{ proxmox_url }}/nodes/{{ proxmox_node_name }}/qemu"
        method: POST
        user: "{{ proxmox_username }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
        body_format: json
        body:
          vmid: "{{ item }}"
          name: "vm-{{ item }}"
          template: 1
          node: "{{ proxmox_node_name }}"
          ostype: "{{ ostype }}"
          memory: "{{ memory_mb }}"
          cores: "{{ cpu_cores }}"
          disk: "{{ disk_size_gb }}G"
        status_code: 201
      register: create_vm_response
      loop: "{{ vm_ids }}"

    - name: Fail if any VM creation fails
      fail:
        msg: "VM creation failed for VMID {{ item }}"
      when: item.status != 201
      loop: "{{ create_vm_response.results }}"

    - name: Update packages inside the VMs
      uri:
        url: "{{ proxmox_url }}/nodes/{{ proxmox_node_name }}/qemu/{{ item.vmid }}/status/current"
        method: GET
        user: "{{ proxmox_username }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
        return_content: yes
      register: vm_status
      loop: "{{ create_vm_response.results }}"

    - name: Wait for VMs to start
      pause:
        minutes: 5
      until: vm_status.content | from_json.status == 'running'

    - name: Update packages inside the VMs
      uri:
        url: "{{ proxmox_url }}/nodes/{{ proxmox_node_name }}/qemu/{{ item.vmid }}/exec/update_packages"
        method: POST
        user: "{{ proxmox_username }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
      register: update_packages_response
      loop: "{{ create_vm_response.results }}"

    - name: Fail if any package update fails
      fail:
        msg: "Package update failed for VMID {{ item.vmid }}"
      when: item.status != 200

    - name: Display VM statuses
      debug:
        var: item.content | from_json
      loop: "{{ create_vm_response.results }}"
